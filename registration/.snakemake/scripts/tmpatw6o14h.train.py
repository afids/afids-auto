
######## snakemake preamble start (automatically inserted, do not edit) ########
import sys; sys.path.extend(['/home/greydon/.local/lib/python3.8/site-packages', '/home/greydon/Documents/GitHub/Auto-afids/workflow/scripts']); import pickle; snakemake = pickle.loads(b'\x80\x04\x95X\x07\x00\x00\x00\x00\x00\x00\x8c\x10snakemake.script\x94\x8c\tSnakemake\x94\x93\x94)\x81\x94}\x94(\x8c\x05input\x94\x8c\x0csnakemake.io\x94\x8c\nInputFiles\x94\x93\x94)\x81\x94\x8c=/media/veracrypt6/projects/autofids/data/OASIS/deriv/features\x94a}\x94(\x8c\x06_names\x94}\x94\x8c\x12_allowed_overrides\x94]\x94(\x8c\x05index\x94\x8c\x04sort\x94eh\x10\x8c\tfunctools\x94\x8c\x07partial\x94\x93\x94h\x06\x8c\x19Namedlist._used_attribute\x94\x93\x94\x85\x94R\x94(h\x16)}\x94\x8c\x05_name\x94h\x10sNt\x94bh\x11h\x14h\x16\x85\x94R\x94(h\x16)}\x94h\x1ah\x11sNt\x94bub\x8c\x06output\x94h\x06\x8c\x0bOutputFiles\x94\x93\x94)\x81\x94\x8cU/media/veracrypt6/projects/autofids/data/OASIS/deriv/models/afid-14_desc-coarse_model\x94a}\x94(h\x0c}\x94h\x0e]\x94(h\x10h\x11eh\x10h\x14h\x16\x85\x94R\x94(h\x16)}\x94h\x1ah\x10sNt\x94bh\x11h\x14h\x16\x85\x94R\x94(h\x16)}\x94h\x1ah\x11sNt\x94bub\x8c\x06params\x94h\x06\x8c\x06Params\x94\x93\x94)\x81\x94(\x8c\x0214\x94\x8c\x06coarse\x94e}\x94(h\x0c}\x94(\x8c\tnum_afids\x94K\x00N\x86\x94\x8c\nnum_levels\x94K\x01N\x86\x94uh\x0e]\x94(h\x10h\x11eh\x10h\x14h\x16\x85\x94R\x94(h\x16)}\x94h\x1ah\x10sNt\x94bh\x11h\x14h\x16\x85\x94R\x94(h\x16)}\x94h\x1ah\x11sNt\x94bh8h4h:h5ub\x8c\twildcards\x94h\x06\x8c\tWildcards\x94\x93\x94)\x81\x94(h4h5e}\x94(h\x0c}\x94(\x8c\x08afid_num\x94K\x00N\x86\x94\x8c\x0btrain_level\x94K\x01N\x86\x94uh\x0e]\x94(h\x10h\x11eh\x10h\x14h\x16\x85\x94R\x94(h\x16)}\x94h\x1ah\x10sNt\x94bh\x11h\x14h\x16\x85\x94R\x94(h\x16)}\x94h\x1ah\x11sNt\x94b\x8c\x08afid_num\x94h4\x8c\x0btrain_level\x94h5ub\x8c\x07threads\x94K\x00\x8c\tresources\x94h\x06\x8c\tResources\x94\x93\x94)\x81\x94(K\x00K\x01M\xa0\x0fe}\x94(h\x0c}\x94(\x8c\x06_cores\x94K\x00N\x86\x94\x8c\x06_nodes\x94K\x01N\x86\x94\x8c\x06mem_mb\x94K\x02N\x86\x94uh\x0e]\x94(h\x10h\x11eh\x10h\x14h\x16\x85\x94R\x94(h\x16)}\x94h\x1ah\x10sNt\x94bh\x11h\x14h\x16\x85\x94R\x94(h\x16)}\x94h\x1ah\x11sNt\x94bhaK\x00hcK\x01heM\xa0\x0fub\x8c\x03log\x94h\x06\x8c\x03Log\x94\x93\x94)\x81\x94}\x94(h\x0c}\x94h\x0e]\x94(h\x10h\x11eh\x10h\x14h\x16\x85\x94R\x94(h\x16)}\x94h\x1ah\x10sNt\x94bh\x11h\x14h\x16\x85\x94R\x94(h\x16)}\x94h\x1ah\x11sNt\x94bub\x8c\x06config\x94}\x94(\x8c\tinput_dir\x94\x8c./media/veracrypt6/projects/autofids/data/OASIS\x94\x8c\noutput_dir\x94\x8c./media/veracrypt6/projects/autofids/data/OASIS\x94\x8c\x08template\x94\x8c1resources/mni_icbm152_t1_tal_nlin_asym_09c.nii.gz\x94\x8c\nmeta_nifti\x94}\x94(\x8c\x06suffix\x94\x8c\x03T1w\x94\x8c\textension\x94\x8c\x07.nii.gz\x94\x8c\x08datatype\x94\x8c\x04anat\x94\x8c\x05scope\x94\x8c\x03raw\x94u\x8c\nderiv_meta\x94}\x94(\x8c\x05afids\x94}\x94(\x8c\x06suffix\x94\x8c\x05afids\x94\x8c\textension\x94\x8c\x05.fcsv\x94\x8c\x08datatype\x94\x8c\x04anat\x94\x8c\x05scope\x94\x8c\x05afids\x94u\x8c\x08features\x94}\x94(\x8c\x06suffix\x94\x8c\x08features\x94\x8c\textension\x94\x8c\x04.npy\x94\x8c\x05scope\x94\x8c\x08features\x94uu\x8c\x05flirt\x94}\x94(\x8c\x03dof\x94K\x06\x8c\x0ccoarsesearch\x94K<\x8c\nfinesearch\x94K\x12\x8c\x04cost\x94\x8c\nmutualinfo\x94\x8c\x06interp\x94\x8c\x04sinc\x94u\x8c\x0cmodel_params\x94}\x94(\x8c\x0fpercent_holdout\x94K\x14\x8c\x0bnum_threads\x94G?\xe8\x00\x00\x00\x00\x00\x00\x8c\nmax_memory\x94M\xa0\x0f\x8c\x0ffeature_offsets\x94\x8c\x1dresources/feature_offsets.npz\x94uu\x8c\x04rule\x94\x8c\x0bcoarseTrain\x94\x8c\x0fbench_iteration\x94N\x8c\tscriptdir\x94\x8c:/home/greydon/Documents/GitHub/Auto-afids/workflow/scripts\x94ub.'); from snakemake.logging import logger; logger.printshellcmds = False; __real_file__ = __file__; __file__ = '/home/greydon/Documents/GitHub/Auto-afids/workflow/scripts/train.py';
######## snakemake preamble end #########
#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Jul 20 20:32:42 2020

@author: greydon
"""
import numpy as np
from sklearn.ensemble import RandomForestRegressor
import joblib
import os
from glob import glob

files=glob(os.path.join(snakemake.input[0],'afid-'+snakemake.params[0]+'*'+'desc-'+snakemake.params[1]+'_features.npy'))

finalpredarr = np.zeros((1,2001))
for ifeat in files:
    feature_data = np.load(ifeat)
    finalpredarr = np.concatenate((finalpredarr,feature_data[0]))

# Model training
finalpredarr = finalpredarr[1:,:]

regr_rf = RandomForestRegressor(n_estimators=20, max_features=0.33, min_samples_leaf=5,
                            random_state=2, n_jobs=-1)
X_train = finalpredarr[:,:-1]
y_train = finalpredarr[:,-1]

Mdl = regr_rf.fit(X_train, y_train)

with open(snakemake.output[0], 'wb') as f:
    joblib.dump(Mdl, f)
    